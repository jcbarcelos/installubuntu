autoinstall:
    version: 1
    identity:
        realname: 'Júlio César'
        hostname: ubuntu-desktop
        username: jc
        password: '$6$.7PR4Fjwsf4VPGhG$s6CkDqR/l/YS3TM4zwSUqEYxzMgoYVjsJ27l/d/Ak7CJFvdUUZ7HcbkZvVUlv5VFfvYKDqaKjm4lxxwJyYdeM0'
    locale: en_US.UTF-8
    keyboard:
        layout: br
    timezone: "America/Sao_Paulo"
    packages:
        - libreoffice
        - gimp
        - git
        - wget
        - adb
        - zsh
        - pipx
        - python3-full
        - zsh-autosuggestions
        - snapd
        - curl
        - clang
        - ninja-build
        - libgtk-3-dev
        - ubuntu-restricted-extras
        - ffmpeg
        - flatpak
        - python3-pip
        - cmake
        - ca-certificates
        - python3-gi
        - python3-gi-cairo
        - gir1.2-gtk-3.0
        - libcairo2-dev
        - pkg-config
        - python3-dev
        - libfuse2
        - jq
        - zsh-theme-powerlevel9k
        - zsh-syntax-highlighting
        - dirmngr
        - gpg
        - curl
        - gawk
        - libc6:amd64
        - libc6:i386
        - libegl1:amd64
        - libegl1:i386
        - libgbm1:amd64
        - libgbm1:i386
        - libgl1-mesa-dri:amd64
        - libgl1-mesa-dri:i386
        - libgl1:amd64
        - libgl1:i386
        - steam-libs-amd64:amd64
        - steam-libs-i386:i386
        - ca-certificates
        - gnupg
        
    snaps:
        - name: spotify
          channel: stable
          classic: false
        - name: steam
          channel: stable
          classic: false
    codecs:
        install: true
    drivers:
        install: true
    updates: all
    shutdown: reboot
    late-commands:
        - sudo apt update; sudo apt upgrade -y;
        - sudo apt install flatpak -y && sudo apt install gnome-software-plugin-flatpak -y;
        - sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo;
        - if command -v kubectl >/dev/null 2>&1; then echo 'kubectl existe'; else
            curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl";
            chmod +x ./kubectl;
            sudo mv ./kubectl /usr/local/bin/kubectl;
            curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb;
            sudo dpkg -i minikube_latest_amd64.deb;
            sudo rm -rf *.deb;
          fi
        - if command -v code >/dev/null 2>&1; then echo 'code existe'; else
            sudo -u $USER wget https://vscode.download.prss.microsoft.com/dbazure/download/stable/5437499feb04f7a586f677b155b039bc2b3669eb/code_1.90.2-1718751586_amd64.deb;
            sudo dpkg -i *.deb;
            sudo rm -rf *.deb;
          fi
        - if command -v code >/dev/null 2>&1; then echo 'code existe'; else
            sudo -u $USER wget https://vscode.download.prss.microsoft.com/dbazure/download/stable/5437499feb04f7a586f677b155b039bc2b3669eb/code_1.90.2-1718751586_amd64.deb;
            sudo dpkg -i *.deb;
            sudo rm -rf *.deb;
          fi
        - if command -v kind >/dev/null 2>&1; then echo 'kind existe'; else
            sudo [ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64;
            sudo chmod +x ./kind;
            sudo mv ./kind /usr/local/bin/kind;
            sudo curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64;
            sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64;
            export ZSH_DISABLE_COMPFIX=true;
          fi
        - if command -v gh >/dev/null 2>&1; then echo 'gh existe'; else
            (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) &&
            sudo mkdir -p -m 755 /etc/apt/keyrings &&
            wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg >/dev/null &&
            sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg &&
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null &&
            sudo apt update &&
            sudo apt install gh -y;
          fi
        - if command -v google-chrome >/dev/null 2>&1; then echo 'google-chrome existe'; else
            sudo -u $USER wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb;
            sudo dpkg -i *.deb;
            sudo rm -rf *.deb;
          fi
        - if command -v docker >/dev/null 2>&1; then echo 'docker existe'; else
            sudo apt-get update;
            sudo install -m 0755 -d /etc/apt/keyrings;
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc;
            sudo chmod a+r /etc/apt/keyrings/docker.asc;
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu jammy stable" | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null;
            sudo apt-get update;
            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y;
            sudo groupadd docker;
            sudo usermod -aG docker $USER;
          fi
        - flatpak install flathub --assumeyes com.brave.Browser
        - flatpak install flathub --assumeyes com.github.unrud.VideoDownloader
        - flatpak install flathub --assumeyes org.gnome.font-viewer
        - flatpak install flathub --assumeyes life.bolls.bolls
        - flatpak install flathub --assumeyes com.discordapp.Discord
        - rm -rf /home/$USER/.asdf
        - git clone https://github.com/asdf-vm/asdf.git /home/$USER/.asdf --branch v0.14.0
        - echo ". /home/$USER/.asdf/asdf.sh" >> /home/$USER/.zshrc
        - echo ". /home/$USER/.asdf/completions/asdf.bash" >> /home/$USER/.zshrc
        - source /home/$USER/.zshrc
        - asdf plugin-add nodejs https://github.com/asdf-vm/asdf-nodejs.git
        - asdf plugin-add java https://github.com/halcyon/asdf-java.git
        - asdf plugin-add flutter https://github.com/oae/asdf-flutter.git
        - asdf plugin-add python
        - npm config set prefix ~/.npm-global
        - npm config set cache ~/.npm-global/cache
        - asdf install nodejs latest
        - asdf global nodejs latest
        - asdf install java openjdk-11
        - asdf install java latest
        - asdf global java openjdk-11
        - asdf install flutter latest
        - asdf global flutter latest
        - asdf install python latest
        - asdf install python 3.6.12
        - npm install -g yarn
        - npm install -g pnpm
        - sudo systemctl start docker.service
        - sudo systemctl enable docker.service
        - sudo chown $USER:$USER /var/run/docker.sock
        - docker pull postgres
        - echo "alias update='sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y && sudo apt-get clean && sudo apt-get autoclean && sudo killall snap-store; sudo snap refresh && flatpak update -y;'" >> /home/$USER/.bashrc
        - echo "alias update='sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y && sudo apt-get clean && sudo apt-get autoclean && sudo killall snap-store; sudo snap refresh && flatpak update -y;'" >> /home/$USER/.zshrc
        - source ~/.zshrc
    # storage:
    #     layout:
    #         name: custom
    #     devices:
    #         nvme0n1:
    #             type: disk
    #             id: 09F3A000000000000195
    #             ptable: gpt
    #             wipe: superblock-recursive
    #             grub_device: true
    #             partitions:
    #                 - name: root
    #                   size: 50%
    #                   flag: boot
    #                   fs: ext4
    #                   mountpoint: /
    #                 - name: home
    #                   size: 50%
    #                   fs: ext4
    #                   mountpoint: /home
    # network:
    #     version: 2
    #     ethernets:
    #         eth0:
    #             dhcp4: true
    #     wifis:
    #         wlan0:
    #             dhcp4: true
    #             access-points:
    #                 "jt_g5":
    #                     password: "$6$LsC2zGgTzq39PTmV$h1f63kzAXuwGOI8sihhW3m05enuCH2/UDFOGRHpcBQaGGl4QaL8IBLJIqwvhbpp9/RLvwbW9wUGDbrcpKLfDg1"
